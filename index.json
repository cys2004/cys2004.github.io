[{"content":"","date":"2023-11-05","externalUrl":null,"permalink":"/","section":"","summary":"","title":"","type":"page"},{"content":"","date":"2023-11-05","externalUrl":null,"permalink":"/categories/","section":"Categories","summary":"","title":"Categories","type":"categories"},{"content":"","date":"2023-11-05","externalUrl":null,"permalink":"/tags/console/","section":"Tags","summary":"","title":"Console","type":"tags"},{"content":"","date":"2023-11-05","externalUrl":null,"permalink":"/tags/javascript/","section":"Tags","summary":"","title":"JavaScript","type":"tags"},{"content":"","date":"2023-11-05","externalUrl":null,"permalink":"/tags/","section":"Tags","summary":"","title":"Tags","type":"tags"},{"content":"","date":"2023-11-05","externalUrl":null,"permalink":"/tags/web/","section":"Tags","summary":"","title":"Web","type":"tags"},{"content":"","date":"2023-11-05","externalUrl":null,"permalink":"/categories/%E6%8A%80%E6%9C%AF/","section":"Categories","summary":"","title":"技术","type":"categories"},{"content":"简单分享几种常用的解除网页复制粘贴限制的方法。\n通用方法——禁用 JavaScript # 部分网站通过简单禁用 JavaScript 即可解除复制或者粘贴限制。\nPC端以 Chrome 为例，在开发者工具中的 Settings—Preferences（快捷键为 F12 \u0026amp; F1）里的 Debugger 区域内勾选 Disable JavaScript 选项即可。\nTips: 用完记得关掉。\n解除复制限制 # 小书签法（推荐） # 通过浏览器书签在页面内执行 JavaScript 代码进而解除限制。\n在浏览器内新建书签后将 URL 改为下面的 JavaScript 代码并保存。在需要解除复制限制的网页中点击该书签即可解除限制。\njavascript:(function(bookmarklets)%7Bfor(var i=0;i\u0026lt;bookmarklets.length;i++)%7Bvar code=bookmarklets%5Bi%5D.url;if(code.indexOf(\u0026#34;javascript:\u0026#34;)!=-1)%7Bcode=code.replace(\u0026#34;javascript:\u0026#34;,\u0026#34;\u0026#34;);eval(code)%7Delse%7Bcode=code.replace(/%5Es+%7Cs+$/g,\u0026#34;\u0026#34;);if(code.length\u0026gt;0)%7Bwindow.open(code)%7D%7D%7D%7D)(%5B%7Btitle:\u0026#34;破除右键菜单限制\u0026#34;,url:\u0026#34;javascript:function applyWin(a)%7Bif(typeof a.__nnANTImm__===%5Cx22undefined%5Cx22)%7Ba.__nnANTImm__=%7B%7D;a.__nnANTImm__.evts=%5B%5Cx22mousedown%5Cx22,%5Cx22mousemove%5Cx22,%5Cx22copy%5Cx22,%5Cx22contextmenu%5Cx22%5D;a.__nnANTImm__.initANTI=function()%7Ba.__nnantiflag__=true;a.__nnANTImm__.evts.forEach(function(c,b,d)%7Ba.addEventListener(c,this.fnANTI,true)%7D,a.__nnANTImm__)%7D;a.__nnANTImm__.clearANTI=function()%7Bdelete a.__nnantiflag__;a.__nnANTImm__.evts.forEach(function(c,b,d)%7Ba.removeEventListener(c,this.fnANTI,true)%7D,a.__nnANTImm__);delete a.__nnANTImm__%7D;a.__nnANTImm__.fnANTI=function(b)%7Bb.stopPropagation();return true%7D;a.addEventListener(%5Cx22unload%5Cx22,function(b)%7Ba.removeEventListener(%5Cx22unload%5Cx22,arguments.callee,false);if(a.__nnantiflag__===true)%7Ba.__nnANTImm__.clearANTI()%7D%7D,false)%7Da.__nnantiflag__===true?a.__nnANTImm__.clearANTI():a.__nnANTImm__.initANTI()%7DapplyWin(top);var fs=top.document.querySelectorAll(%5Cx22frame, iframe%5Cx22);for(var i=0,len=fs.length;i\u0026lt;len;i++)%7Bvar win=fs%5Bi%5D.contentWindow;try%7Bwin.document%7Dcatch(ex)%7Bcontinue%7DapplyWin(fs%5Bi%5D.contentWindow)%7D;void 0;\u0026#34;%7D,%7Btitle:\u0026#34;破除选择复制限制\u0026#34;,url:\u0026#34;javascript:(function()%7Bvar doc=document;var bd=doc.body;bd.onselectstart=bd.oncopy=bd.onpaste=bd.onkeydown=bd.oncontextmenu=bd.onmousemove=bd.onselectstart=bd.ondragstart=doc.onselectstart=doc.oncopy=doc.onpaste=doc.onkeydown=doc.oncontextmenu=null;doc.onselectstart=doc.oncontextmenu=doc.onmousedown=doc.onkeydown=function ()%7Breturn true;%7D;with(document.wrappedJSObject%7C%7Cdocument)%7Bonmouseup=null;onmousedown=null;oncontextmenu=null;%7Dvar arAllElements=document.getElementsByTagName(%5Cx27*%5Cx27);for(var i=arAllElements.length-1;i\u0026gt;=0;i--)%7Bvar elmOne=arAllElements;with(elmOne.wrappedJSObject%7C%7CelmOne)%7Bonmouseup=null;onmousedown=null;%7D%7Dvar head=document.getElementsByTagName(%5Cx27head%5Cx27)%5B0%5D;if(head)%7Bvar style=document.createElement(%5Cx27style%5Cx27);style.type=%5Cx27text/css%5Cx27;style.innerHTML=%5Cx22html,*%7B-moz-user-select:auto!important;%7D%5Cx22;head.appendChild(style);%7Dvoid(0);%7D)();\u0026#34;%7D%5D) 注：此段代码来自 奔跑中的奶酪 大佬的博客。也可自行搜索使用其他具有相同效果的代码。\nConsole 调试法（推荐） # 在开发者工具（F12）的 Console（控制台）内粘贴如下代码后回车执行即可解除大部分网页的复制限制。下列代码中任选其一即可。\n代码一 # document.oncopy=function(){ event.returnValue=true; }; document.onselectstart=function(){ event.returnValue=true; }; document.oncontextmenu=function(){ event.returnValue=true; }; 代码二 # document.write($(\u0026#34;#contentText\u0026#34;).html().replace(new RegExp(\u0026#34;script\u0026#34;,\u0026#34;gi\u0026#34;),\u0026#34;\u0026#34;)); 脚本/扩展法（推荐） # 浏览器安装油猴/暴力猴等脚本管理器后到 Greasy Fork 等平台下载安装 Remove web limits(modified) 等脚本。\n或自行查找适配所用浏览器的相应浏览器扩展。譬如适配 Chromium 系的 Simple Allow Copy 和 SuperCopy 超级复制 以及适配 Firefox 的 Absolute Enable Right Click \u0026amp; Copy。\n删除事件监听器法（推荐） # 打开开发者工具（F12），点击“选取页面中的元素”按钮（或快捷键 Ctrl+Shift+C），找到源文本所在的页面元素，单击选中。然后打开右侧的事件监听器（Event Listeners）选项卡，找到对应的 copy 事件，右键选择 Remove 即可。\n保存/打印网页法 # 在浏览器内将网页保存为本地文件，然后打开复制。推荐搭配 SingleFile 扩展使用\n或在浏览器内按 Ctrl+P 调用浏览器的网页打印功能，将网页转换为 PDF 文件后再复制。\nOCR 识别法 # 截图后通过 OCR 识别所需文本。在某些情况下不失为一种解决方案。\nQQ自带的文字识别和白描网页版都可以一试。\nOLE 拖放法 # 选中要复制的文本后直接拖动到记事本等文本编辑器中，通过 OLE 获取源文本。该方法平台依赖性较大，适用范围窄，不推荐。\n源代码查看法 # 方法一（推荐） # 在开发者工具（F12）的 Console（控制台）中粘贴下面的代码后回车运行。代码运行后会以控制台输出的方式打印页面中的文字，复制控制台输出即可。\nvar a = document.getElementsByTagName(\u0026#39;p\u0026#39;); for(var i=0;i\u0026lt;a.length;i++){console.log(a[i].innerText)}; 方法二 # 浏览器内右键空白区域选择“查看网页源代码”（或快捷键 Ctrl+P），在 HTML 源代码页面中使用 Ctrl+F 查找需要复制的内容。\n切换内核法 # 将浏览器切换为 IE 内核。对某些在 IE 模式下能正常加载内容的网页可能有效。不推荐。\n搜索引擎快照法 # 在百度等搜索引擎中搜索该网页，找到并打开搜索引擎生成的相应网页快照，在网页快照页面中复制所需文本。不推荐。\n解除粘贴限制 # 删除事件监听器法（推荐） # 同上所述，选中相应输入框元素后在事件监听器（Event Listeners）选项卡中找到对应的 Paste 事件，右键 Remove 即可。\n参考 # 【总结】解除网页文本禁止复制限制的六种方法\n解除网页复制限制的几种方法\n网页内容禁止复制怎么办？教你8种方法轻松搞定，全网最全！\n秘技 | 一个小书签，帮你解除网页禁止复制和右键限制的问题\n网页解除复制粘贴限制的一些小技巧\n","date":"2023-11-05","externalUrl":null,"permalink":"/posts/20231105-copy-and-paste/","section":"文章","summary":"简单分享几种常用的解除网页复制粘贴限制的方法。","title":"轻松解除网页复制与粘贴限制","type":"posts"},{"content":"","date":"2023-10-01","externalUrl":null,"permalink":"/tags/crack/","section":"Tags","summary":"","title":"Crack","type":"tags"},{"content":"","date":"2023-10-01","externalUrl":null,"permalink":"/tags/rust/","section":"Tags","summary":"","title":"Rust","type":"tags"},{"content":"","date":"2023-10-01","externalUrl":null,"permalink":"/tags/typora/","section":"Tags","summary":"","title":"Typora","type":"tags"},{"content":"众所周知，Typora 是一款非常优秀的 Markdown 编辑器，而我日常撰写博文使用的也正是 Typora。然而，正版 Typora 高达 89 元的售价让不少像我这样的学生党望而却步，不得不通过其他技术手段来使用 Typora。\n但是，在互联网上公开的破解手段中，大多数都是采用对 Typora 加密的核心 js 进行修改或直接 Patch 二进制的方式实现绕过授权校验的。这些方案当然可行，但仍存在版本针对性强、侵入性高等诸多缺陷。\n在这种情况下，吾爱破解论坛的 hlrlqy 大佬提出的 通过对Node.js的相关实现进行Hook从而修改数据的方法 就成为了更加理想的破解方式。\n本文仅记录我使用这一项目的过程，仍然强烈推荐有经济能力的朋友 支持正版。\n用于进行注入的 NodeInject 项目和用于生成 License Key 的 NodeInject_Hook_example 项目是这一方案的 Rust 实现。由 hazukieq 大佬 Fork 的版本 Yporaject 合并了上述两个项目并撰写了详细的教程。在此对二位大佬的所做的工作表示感谢。\n注意：\n1.根据 Yporaject 项目的说明，由于 Typora 在 MacOS 上的打包方法和运行环境与其他平台存在差异，该方案仅适用于 Windows 和 Linux 系统。\n2.由于 Yporaject 与原项目代码不同步，可能因为代码滞后导致对 Typora 的更新版本失效。如果遇到此问题，请查看 NodeInject 项目和 NodeInject_Hook_example 项目。\n环境信息 # Manjaro Linux （Linux Kernel 6.5.3-1-MANGARO x64）\nWindows 10 IoT 企业版 LTSC 21H2 （19044.3448）\ncargo 1.72.1 (103a7ff2e 2023-08-15)\nTypora 1.7.5\n配置 Rust 编译环境 # Linux：\ncurl --proto \u0026#39;=https\u0026#39; --tlsv1.2 -sSf https://sh.rustup.rs | sh Windows：\n参照 官方教程 使用 Rustup 安装。\n安装官方版 Typora # Linux：\nflatpak install io.typora.Typora Linux 下的其他安装方法详见 Typora官网。\nWindows：官网下载 安装包 后直接安装。\n克隆 Yporaject 项目 # git clone https://github.com/hazukieq/Yporaject.git --depth=1 如果在克隆项目时遇到网络问题，可以使用 gitclone.com 提供的镜像加速：\ngit clone https://gitclone.com/github.com/hazukieq/Yporaject.git --depth=1 也可以使用\ngit config --global http.proxy/https.proxy 来为 Git 手动设置代理，本文不再赘述。\n编译 Yporaject 项目 # 下面的命令适用于 Bash，Windows Powershell 需要略作调整。\n# 进入 Yporaject 项目 cd Yporaject # 运行编译命令 cargo build # 查看二进制是否生成,程序名称为 node_inject ls target/debug 复制二进制程序到安装目录下 # # 记录当前目录路径 cur=`pwd` # 复制二进制程序到相关目录下 sudo cp target/debug/node_inject /usr/share/typora # 进入相关目录 cd /usr/share/typora # 给予二进制程序执行权限 sudo chmod +x node_inject # 运行二进制程序,请注意程序运行输出信息 sudo ./node_inject 获取 License Key # # 返回项目 cd $cur # 进入 license-gen 文件夹 cd license-gen # 编译代码 cargo build # 运行二进制程序 cargo run 你将会得到下面这样的输出：\nFinished dev [unoptimized + debuginfo] target(s) in 0.00s Running `target/debug/license-gen` License for you: xxxxxx-xxxxxx-xxxxxx-xxxxxx 复制 License for you 后面的那一串序列号备用。\n激活 Typora # #运行 Typora (或直接在桌面上点击程序图标) typora \u0026amp; 依次点击界面上方菜单栏的 帮助 \u0026gt; 我的许可证...(Help \u0026gt; My license) 打开激活界面，然后输入激活邮箱（可以任意填写）和上面复制的序列码。\n如果遇到网络问题导致的“序列码激活软件失败，连接不上服务器”，可以在 偏好设置 \u0026gt; 通用 中勾选 “使用 Typora 国内服务器”。如果问题仍然没有解决，可以挂代理后使用国外激活服务器（不勾选 “使用 Typora 国内服务器”）重试。\n参考资料 # 1.[Linux/Windows]Typora 理论多版本兼容破解方案\n2.Typora最新版激发（Ubuntu）\n","date":"2023-10-01","externalUrl":null,"permalink":"/posts/20231001-typora-crack/","section":"文章","summary":"众所周知，Typora 是一款非常优秀的 Markdown 编辑器，而我日常撰写博文使用的也正是 Typora。然而，正版 Typora 高达 89 元的售价让不少像我这样的学生党望而却步，不得不通过其他技术手段来使用 Typora。","title":"通过 NodeInject 和 Yporaject 激活 Typora","type":"posts"},{"content":"","date":"2023-01-17","externalUrl":null,"permalink":"/tags/android/","section":"Tags","summary":"","title":"Android","type":"tags"},{"content":"","date":"2023-01-17","externalUrl":null,"permalink":"/tags/flashing/","section":"Tags","summary":"","title":"Flashing","type":"tags"},{"content":"","date":"2023-01-17","externalUrl":null,"permalink":"/tags/honor-7x/","section":"Tags","summary":"","title":"Honor 7X","type":"tags"},{"content":"","date":"2023-01-17","externalUrl":null,"permalink":"/tags/huawei/","section":"Tags","summary":"","title":"Huawei","type":"tags"},{"content":"","date":"2023-01-17","externalUrl":null,"permalink":"/tags/unlock/","section":"Tags","summary":"","title":"Unlock","type":"tags"},{"content":" 由于系统崩坏等一系列原因，我在春节前夕准备彻底告别伴随我两年之久的旧的原厂系统。本文简单记录了我的刷机过程。\n刷入原厂固件 # 备份数据 # 数据无价，备份数据是刷机前的首要准备工作。\n获取固件和TWRP Recovery # 如无必要，强烈不建议使用奇兔刷机等刷机工具提供的固件以及一键刷机服务。\n如果想继续使用国行版系统的话，可以通过华为手机助手的升级或降级操作下载原厂固件。其下载的固件一般存储在 C:\\Users\\用户名\\Documents\\HiSuite\\ROM 目录下。\n但我此次想要尝鲜国际版固件，因此需要手动寻找匹配的固件。\n在 Google 上以 BND-AL10 firmware stock 为关键字搜索，成功找到所需固件。\nHonor_7X_BND-AL10_9.1.0.140_C675E2R1P1T8_Firmware_9.0.0_R3_EMUI9.1.0_05015DEE_Dload.zip\n由文件名可知该固件为原厂固件，系统版本为 EMUI9.1（Android9.0），国家地区代码为 C675，查表 后确认为印度版固件，自带完整的 Google 服务。\n在 XDA论坛 上以 BND-AL10 TWRP 为关键字搜索得到 该机型的TWRP Recovery文件。\n该 Recovery 仅适配 Honor 7X 的出厂系统 EMUI 8.0.0，如果后续通过 OTA 升级到 EMUI 9.0/9.1，需要先通过华为手机助手降级到 EMUI 8.0.0，然后再刷入 TWRP Recovery。\n解锁 Bootloader # 鉴于华为官方早在 2018 年就关闭了官方获取 Bootloader 解锁码的通道，现在只能通过非官方途径解锁 Bootloader。此处建议通过淘宝等平台远程租用猎人加密狗等工具进行解锁。如果对自己没有信心，也可以直接购买第三方解锁服务，但价格会高出不少。\n我的设备已经解锁了 Bootloader，因此本次刷机无需进行这一步。\n解锁 Bootloader 时会清除个人数据，请务必做好备份工作！\n刷入 TWRP Recovery # 在设备的开发者选项中启用 USB 调试，连接电脑后在手机弹出的对话框中授权 USB 调试。 打开 adb 命令行，确认设备连接状态。 adb devices 通过 adb 重启设备到 fastboot 模式 adb reboot fastboot 刷入 TWRP fastboot flash recovery [TWRP 镜像文件的位置] 重启设备 fastboot reboot 刷入固件 # 解压出固件中的卡刷包 /Firmware/dload/update_sd.zip。 通过 adb 推送刷机包到设备存储。 adb push [卡刷包的完整路径] /sdcard 通过 adb 重启设备进入 TWRP Recovery adb reboot recovery 在 TWRP 中进入 安装 界面，选中刚才推送的卡刷包，勾选 完成后重启，滑动滑块确认安装。 等待安装完成，之后设备会自动重启进入新系统。 刷入 Magisk # 修补 RAMDISK # 从卡刷包 update_sd.zip 中解压出 UPDATE.APP 文件。 下载 HuaweiUpdateExtractor 并打开，在Settings选项卡中取消勾选Verify header checksum。 将刚才解压得到的 UPDATE.APP 文件拖动到程序窗口中，找到 RECOVERY_RAMDIS.img，右键导出。 使用 adb 将刚才导出的文件推送到设备存储。 adb push [RECOVERY_RAMDIS.img的位置] /sdcard 在设备上安装 Magisk Manager，点击安装——安装到 Recovery——选择并修补一个文件，然后选中刚才推送到设备存储中的 RECOVERY_RAMDIS.img，等待文件修补完成。 文件修补完成后，将设备存储 Downloads 目录下生成的以 magisk_patched 为文件名开头的文件复制到电脑上。 刷入修补后的 RAMDISK # 使用 adb 重启到 fastboot 模式。 adb reboot fastboot 在 fastboot 模式下刷入修补后的 ramdisk 文件。 fastboot flash recovery_ramdisk [magisk_patched-xxx.img 文件的位置] 刷入完成后重启手机到正常系统。 fastboot reboot 在正常系统中通过 adb 重启到 Recovery。 adb reboot recovery 此时的 Recovery 分区已经刷入了 Magisk，执行此命令后将进入带有 Magisk 环境的系统，而不是先前的 TWRP Recovery。\n进入系统后打开 Magisk Manager，点击安装——安装到 Recovery——直接安装（推荐），等待 Magisk 安装完成后重启手机，自动进入带有 Magisk 的系统。 以这种方式安装的 Magisk 位于 Recovery 分区内，需要从 Recovery 分区引导启动系统。由于 Magisk和 Recovery 都在同一个分区，因此进入系统或 Recovery 取决于开机时按下音量键时间的长短。即：\n正常开机——进入到不含 Magisk 的系统；\n同时按下音量 + 键和电源键开机——第一屏出现——放开所有按键——进入到启用 Magisk 的系统；\n同时按下音量 + 键和电源键开机——第一屏出现——继续按音量+键——进入 Recovery。\n但是，由于 Magisk App 此时已经了解设备的状态，因此可以直接在 Magisk App 中普通重启到启用Magisk 的系统。\n刷入 LSPosed # 在 Magisk Manager 的设置中启用 Zygisk 并重启。 从 LSPosed 的 官方仓库 中下载基于 Zygisk 的 LSPosed 模块压缩包（LSPosed-xxx-xxxx-zygisk-release.zip）。 在 Magisk 中安装模块，重启后即可使用 LSPosed。 参考文章 # [新手必看]华为刷机你一定要知道的 - 某贼\n华为EMUI、HarmonyOS 系统ROOT安装Magisk(面具) - 东山海岛\nMagisk 安装说明 - 锦夏挽秋（译）\n","date":"2023-01-17","externalUrl":null,"permalink":"/posts/20230117-flash-honor7x/","section":"文章","summary":"由于系统崩坏等一系列原因，我在春节前夕彻底告别了伴随我两年之久的旧系统。本文简单记录了我的刷机过程。","title":"辞旧迎新——荣耀畅玩 7X（BND-AL10）刷机手记","type":"posts"},{"content":"","date":"2022-12-08","externalUrl":null,"permalink":"/tags/argo-tunnel/","section":"Tags","summary":"","title":"Argo Tunnel","type":"tags"},{"content":"","date":"2022-12-08","externalUrl":null,"permalink":"/tags/cloudflare/","section":"Tags","summary":"","title":"Cloudflare","type":"tags"},{"content":"众所周知，国内的运营商早在十多年前便封锁了家用宽带的 80、443 等端口，因此使用家宽建站需要改用其他端口。这样一来，用户在访问自建网络服务时就必须带端口号访问，不仅会使 URL 繁琐难看，而且有暴露源站引来攻击的风险。使用 Frp 等传统的内网穿透服务是常用的解决方案，但由于政策原因，国内的内网穿透服务只能绑定备案过的域名，况且长期购买稳定的内网穿透服务会是一笔不小的开支。此时，老牌云服务商 Cloudflare 提供的 Argo Tunnel 内网穿透服务就不失为一个好的选择。\n本文部分内容参考了 Hajeekn 和 杰森 两位大佬的文章，在此表达感谢。\n优点 # 完全免费的内网穿透服务 无需备案便可绑定域名 可免费申请和部署 HTTPS 良好的网络攻击防御能力 速度尚可，能满足一般中小型网站的需求 缺点 # 不支持 UDP 协议 服务器位于海外，访问延迟稍高 带宽有限，不能满足大流量、高并发的应用场景 准备 # 一台具有网络连接的 Linux 服务器（即需要内网穿透的服务所在的宿主机。Windows 系统请参阅 Hajeekn 大佬的教程） 一个托管于 Cloudflare 的域名。如果域名托管在国内云服务商（如 DNSPod、万网 等），则需要修改 NS 记录使其指向 Cloudflare 分配的名称服务器以使用 Cloudflare 进行 DNS 解析。相关教程请参阅 Cloudflare Docs 流程 # 安装Cloudflared # 用于运行 Argo Tunnel 服务的 Cloudflared 开源于 Github，可在 Releases 处找到对应平台的二进制文件。\nLinux 下使用以下命令来安装 Cloudflared：\ncurl -LO https://github.com/cloudflare/cloudflared/releases/latest/download/cloudflared-linux-amd64.deb dpkg -i cloudflared-linux-amd64.deb 登录 Cloudflared # cloudflared tunnel login 执行命令后会显示一个 URL，用浏览器打开，登录 Cloudflare 后选择用于内网穿透的域名。\n成功后会自动生成证书，存放于~/cloudflared/cert.pem中。\n新建隧道 # 下方命令里的 为隧道名称，可以随意起。\ncloudflared tunnel create \u0026lt;Tunnel-NAME\u0026gt; 成功后会显示隧道的 UUID，同时提示相关凭证已放置于~/.cloudflared/\u0026lt;Tunnel-UUID\u0026gt;.json中。\n新建 Tunnel 对应的 DNS 记录 # \u0026lt;SUBDOMAIN\u0026gt;填你想用来做内网穿透的域名，可以使用二级域名（example.com）或三级域名（www.example.com） 等。\ncloudflared tunnel route dns \u0026lt;Tunnel-NAME\u0026gt; \u0026lt;SUBDOMAIN\u0026gt; 成功后会自动在选定域名下创建指向 Argo Tunnel 内网穿透服务器的 CNAME 记录。\n建立配置文件 # 新建 Cloudflared 配置文件\nvim ~/.cloudflared/config.yml 写入以下内容并保存\ntunnel: \u0026lt;Tunnel-UUID\u0026gt; credentials-file: /root/.cloudflared/\u0026lt;Tunnel-UUID\u0026gt;.json protocol: h2mux originRequest: connectTimeout: 30s noTLSVerify: false ingress: - hostname: \u0026lt;SUBDOMAIN\u0026gt; service: http://localhost:80 - service: http_status:404 受限于国内网络环境，无法使用默认的 quic 协议建立隧道，因此需指定协议为 http2 或 h2mux，以及本地服务地址http://localhost:80\n配置 Cloudflared 服务 # 新建 Cloudflared 服务文件\nvim /etc/systemd/system/cloudflared.service\n写入以下内容并保存\n[Unit] Description=cloudflared After=network.target [Service] TimeoutStartSec=0 Type=notify ExecStart=/usr/bin/cloudflared --loglevel debug --transport-loglevel warn --config /root/.cloudflared/config.yml tunnel run \u0026lt;Tunnel-NAME\u0026gt; Restart=on-failure RestartSec=5s [Install] WantedBy=multi-user.target 启动 Cloudflared 服务 # systemctl enable cloudflared --now 稍等一两分钟后即可通过刚才配置好的域名 https://\u0026lt;SUBDOMAIN\u0026gt; 访问你的服务。\n参考资料 # Cloudflare 隧道内网穿透搭建记录 Cloudflare 的 Argo Tunnel 使用 Cloudflare Docs Many services, one cloudflared ","date":"2022-12-08","externalUrl":null,"permalink":"/posts/20221208-argo-tunnel/","section":"文章","summary":"众所周知，国内的运营商早在十多年前便封锁了家用宽带的 80、443 等端口，因此使用家宽建站需要改用其他端口。这样一来，用户在访问自建网络服务时就必须带端口号访问，不仅会使 URL 繁琐难看，而且有暴露源站引来攻击的风险。使用 Frp 等传统的内网穿透服务是常用的解决方案，但由于政策原因，国内的内网穿透服务只能绑定备案过的域名，况且长期购买稳定的内网穿透服务会是一笔不小的开支。此时，老牌云服务商 Cloudflare 提供的 Argo Tunnel 内网穿透服务就不失为一个好的选择。","title":"部署 Cloudflare Argo Tunnel 实现零成本内网穿透","type":"posts"},{"content":"","date":"2022-12-08","externalUrl":null,"permalink":"/tags/%E5%86%85%E7%BD%91%E7%A9%BF%E9%80%8F/","section":"Tags","summary":"","title":"内网穿透","type":"tags"},{"content":"Will be finished soon\u0026hellip;\n","date":"2022-06-13","externalUrl":null,"permalink":"/about/","section":"","summary":"\u003cp\u003eWill be finished soon\u0026hellip;\u003c/p\u003e","title":"关于","type":"page"},{"content":"","date":"2022-06-13","externalUrl":null,"permalink":"/posts/","section":"文章","summary":"","title":"文章","type":"posts"},{"content":"I always try to find time to work and learn something new. Usually, most of these pet-projects don\u0026rsquo;t see the light of day. They are, however, great opportunities to try something in the real world and learn from it.\nLogo Title Description References Blowfish Active A powerful, lightweight theme for Hugo built with Tailwind CSS. sitegithub Blowfish-Tools Active CLI to initialize a Blowfish project sitegithubNPM Wormhole A wormhole into the universe - web feed for deep space photography sitegithub ","date":"2022-06-13","externalUrl":null,"permalink":"/projects/","section":"","summary":"\u003cp\u003eI always try to find time to work and learn something new. Usually, most of these \u003cem\u003epet-projects\u003c/em\u003e don\u0026rsquo;t see the light of day. They are, however, great opportunities to try something in the real world and learn from it.\u003c/p\u003e","title":"项目","type":"page"},{"content":"","externalUrl":null,"permalink":"/authors/","section":"Authors","summary":"","title":"Authors","type":"authors"},{"content":"","externalUrl":null,"permalink":"/series/","section":"Series","summary":"","title":"Series","type":"series"}]